import subprocess, sys, platform

def run_cmd(cmd):
    try:
        subprocess.run(cmd, check=True, capture_output=True, text=True)
    except subprocess.CalledProcessError as e:
        print(f"Error: Command {cmd} failed.")
        print(e)
        sys.exit(1)

def check_vulnerabilities():
    os = platform.system()
    print(f"Checking vulnerabilities on {os}...")
    if os == "Windows":
        run_cmd(['powershell', 'Get-HotFix', ';', 'Get-ProcessMitigation', ';', 'wmic', 'qfe', 'list', ';', 'wmic', 'nicconfig', 'get', 'Caption,IPEnabled,MACAddress,SettingID', ';', 'netstat', '-ano'])
    elif os == "Linux":
        run_cmd(['sudo', 'apt-get', 'update', '-y', ';', 'sudo', 'apt-get', 'upgrade', '-y', ';', 'sudo', 'apt-get', 'dist-upgrade', '-y', ';', 'sudo', 'apt-get', 'autoremove', '-y', ';', 'sudo', 'sysctl', '-a', ';', 'sudo', 'ufw', 'status', ';', 'sudo', 'lsof', '-i', '-P', '-n'])
    elif os == "Darwin":
        run_cmd(['sudo', 'softwareupdate', '--install', '--all', '-y', ';', 'sudo', 'sysctl', '-a', ';', 'sudo', 'spctl', '--status', ';', 'sudo', 'lsof', '-i', '-P', '-n'])
    elif os == "Android":
        run_cmd(['adb', 'shell', 'su', '-c', 'cat', '/proc/version', ';', 'adb', 'shell', 'su', '-c', 'cat', '/proc/meminfo', ';', 'adb', 'shell', 'su', '-c', 'iptables', '-L', ';', 'adb', 'shell', 'su', '-c', 'netstat', '-antp'])
    print(f"{os} vulnerabilities checked successfully.")

def check_memory_vulnerabilities():
    print("Checking for memory vulnerabilities...")
    run_cmd(['sudo', 'mtr'])

def check_network_vulnerabilities():
    print("Checking for network vulnerabilities...")
    run_cmd(['sudo', 'nmap', '-sS', '-O', '-T4', '-F', 'localhost'])

def system_maintenance_notice():
    print('Note: This system is undergoing routine maintenance. Some functions may be temporarily unavailable or degraded. Please avoid critical activities during this time. Thank you for your patience. Maintenance will be completed in approximately 1 hour.')

if __name__ == '__main__':
    if not platform.system() == 'Windows' and os.geteuid() != 0:
        print('This script needs to be run with root privileges. Please run again with sudo.')
        sys.exit(1)

    system_maintenance_notice()
    check_vulnerabilities()
    check_memory_vulnerabilities()
    check_network_vulnerabilities()
